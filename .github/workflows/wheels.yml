name: Build wheels

on:
    workflow_dispatch:
    # push:
    #     tags:
    #         - v*

jobs:
    wheels:
        name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-20.04, windows-2019, macos-11]
                arch: ["x86_64", "arm64"]
                include:
                  - os: windows-2019
                    arch: win_amd64
                  - os: windows-2019
                    arch: win32
                  - os: ubuntu-20.04
                    arch: i686
                  - os: ubuntu-20.04
                    arch: aarch64
                  - os: ubuntu-20.04
                    arch: ppc64le
                  - os: ubuntu-20.04
                    arch: s390x
                exclude:
                  - os: windows-2019
                    arch: "x86_64"
        steps:
          - name: Checkout repo
            uses: actions/checkout@v3
          - name: Set up QEMU
            if: runner.os == 'Linux'
            uses: docker/setup-qemu-action@v2
            with:
                platforms: all
          - name: Build and test wheels
            uses: pypa/cibuildwheel@v2.16.2
            env:
                CIBW_BUILD: "*${{ matrix.arch }}"
          - name: Upload wheels
            uses: actions/upload-artifact@v3
            with:
                name: ${{ runner.os }}-${{ matrix.arch }}
                path: wheelhouse/*.whl
                if-no-files-found: error

    sdist:
        name: Build sdist
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repo
            uses: actions/checkout@v3
          - name: Setup Python
            uses: actions/setup-python@v4
            with:
                # Build sdist on lowest supported Python.
                # 3.8 is used because 3.6 has issues with pyproject.toml
                # and 3.7 has bpo-41316.
                python-version: '3.8'
          - name: Build sdist
            run: |
                python -m pip install -U pip
                python -m pip install -U build
                python -m build -s
          - name: Test sdist
            run : python -m pip install dist/*.gz
          - name: Upload sdist
            uses: actions/upload-artifact@v3
            with:
                name: sdist
                path: dist/*
                if-no-files-found: error

    # release:
    #     needs: sdist
    #     runs-on: ubuntu-latest
    #     permissions:
    #       contents: write    
    
    #     steps:
    #       - name: Download artifacts
    #         uses: actions/download-artifact@v4
    #         with:
    #           path: ./artifacts
    
    #       - name: make release
    #         uses: ncipollo/release-action@v1
    #         with:
    #           name: ${{ github.event.repository.name }}-${{ github.ref_name }}
    #           artifacts: artifacts/*
    #           generateReleaseNotes: true
    #           makeLatest: true
    #           allowUpdates: true
    #           tag: v1.16                
