name: Build wheels for Windows ARM64
on:
  workflow_dispatch:
jobs:
  build-warm64:
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
    name: ${{ matrix.python-version }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Download lzo and extract it
      run: |
        if not exist C:\src\ (md C:\src)
        if not exist C:\src\lzo-2.10.tar.gz (curl -fsS http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz -o C:\src\lzo-2.10.tar.gz)
        python tarxfz.py
    - name: Install Visual Studio with ARM64 tools
      run: |
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.ARM64 --includeRecommended --includeOptional"
    - name: Add MSBuild to PATH
      run: |
        setx PATH "%PATH%;C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\amd64"
    - name: Run cmake
      working-directory: C:\src\lzo-2.10
      run: |
        md build
        cd build
        cmake ..
    - name: Build lzo static lib
      working-directory: C:\src\lzo-2.10\build
      run: msbuild lzo_static_lib.vcxproj -p:Configuration=Release;Platform=arm64;OutDir=C:\src\lzo-2.10
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: arm64
    - name: Build wheel
      env:
        LZO_DIR: C:\src\lzo-2.10
      run: |
        python -m pip install -U pip
        python -m pip install -U wheel
        python setup.py bdist_wheel
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist
        if-no-files-found: error
# on:
#   workflow_dispatch:

# jobs:
#   build-arm64:
#     runs-on: windows-latest
#     env:
#       VS_PLATFORM: ARM64
#     defaults:
#       run:
#         shell: cmd
#     strategy:
#       matrix:
#         python-version: ["3.12"]
        
#     name: ${{ matrix.python-version }}
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4
#         with:
#           persist-credentials: false
          
#       - name: Download lzo and extract it
#         run: |
#           if not exist C:\src\ (md C:\src)
#           if not exist C:\src\lzo-2.10.tar.gz (curl -fsS http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz -o C:\src\lzo-2.10.tar.gz)
#           python tarxfz.py
          
#       - name: Run cmake
#         working-directory: C:\src\lzo-2.10
#         run: |
#           md build
#           cd build
#           cmake ..
          
#       - name: Add msbuild to PATH
#         uses: microsoft/setup-msbuild@v1.1
#         # uses: microsoft/setup-msbuild@v2
#         if: always()
#         id: setup_msbuild_path_arm
#         with:
#           # vs-version: '17.4'
#           # vs-prerelease: true
#           msbuild-architecture: 'arm64'

#       - name: locate MSBuild
#         run: vswhere -products * -format json -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe

#       - name: echo MSBuild
#         run: msbuild -version    

#       # - name: echo msbuild path
#       #   run: |
#       #     echo "ARM PATH: ${{ steps.setup_msbuild_path_arm.outputs.msbuildPath }}"
          
#       - name: Build lzo static lib
#         working-directory: C:\src\lzo-2.10\build
#         run: msbuild lzo_static_lib.vcxproj -p:Configuration=Release;Platform=arm64;OutDir=C:\src\lzo-2.10
      
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}
#           architecture: arm64
#       - name: Build wheel
#         env:
#           LZO_DIR: C:\src\lzo-2.10
#         run: |
#           python -m pip install -U pip
#           python -m pip install -U wheel
#           python setup.py bdist_wheel
#       - name: Upload artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: wheels
#           path: dist
#           if-no-files-found: error
